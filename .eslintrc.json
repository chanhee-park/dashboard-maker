{
  "env": {
    "browser": true,
    "node": true,
    "es2020": true,
    "jest": true
  },
  "parser": "@typescript-eslint/parser", // Specifies the ESLint parser
  "parserOptions": {
    "sourceType": "module",
    "project": ["./tsconfig.json", "./tsconfig.spec.json"],
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": [
    "testing-library", // React Testing Library 모범사례 추천
    "@typescript-eslint",
    "react",
    "react-hooks",
    "simple-import-sort",
    "unicorn",
    "check-file"
  ],
  "extends": [
    "airbnb",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:prettier/recommended" // Enables eslint-plugin-prettier and displays prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
  ],
  "rules": {
    "react/display-name": 0,
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    "import/extensions": 0,
    "react/react-in-jsx-scope": 0,
    "react/jsx-filename-extension": 0,
    "import/prefer-default-export": 0,
    "react/prop-types": 0,
    "react/require-default-props": 0,
    "react/jsx-one-expression-per-line": 0,
    "react/function-component-definition": [
      2,
      {
        "namedComponents": "arrow-function"
      }
    ],
    "react/jsx-props-no-spreading": 0,
    "@typescript-eslint/no-explicit-any": 2,
    "@typescript-eslint/semi": 2,
    "@typescript-eslint/no-floating-promises": 2,
    "@typescript-eslint/prefer-nullish-coalescing": [
      "error",
      {
        "ignoreTernaryTests": false
      }
    ],
    "unicorn/prefer-switch": [
      "error",
      { "minimumCases": 3, "emptyDefaultCase": "no-default-case" }
    ],
    "unicorn/explicit-length-check": 2,
    "unicorn/no-array-for-each": 0,
    "unicorn/no-for-loop": 0,
    "unicorn/prefer-array-some": 2,
    "unicorn/prefer-date-now": 2,
    "unicorn/prefer-includes": 2,
    "unicorn/prefer-spread": 2,
    "unicorn/numeric-separators-style": 2,
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": "variable",
        "format": ["camelCase", "PascalCase"],
        "filter": {
          "regex": "^_",
          "match": false
        }
      },
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["camelCase"],
        "custom": {
          "regex": "^(is|should|has|can|did)|(ed|able)$",
          "match": true
        }
      },
      {
        "selector": "class",
        "format": ["PascalCase"]
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "memberLike",
        "modifiers": ["private"],
        "format": ["camelCase"],
        "leadingUnderscore": "forbid"
      },
      {
        "selector": "enumMember",
        "format": ["UPPER_CASE"]
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "argsIgnorePattern": "^_" }
    ],
    "@typescript-eslint/no-non-null-assertion": 0,
    "check-file/filename-naming-convention": [
      "warn",
      {
        "**/*.{jsx,tsx}&&!index.{jsx,tsx}": "PASCAL_CASE",
        "**/*.{js,ts}&&!index.{js,ts}": "KEBAB_CASE"
      }
    ],
    "check-file/folder-naming-convention": [
      "warn",
      {
        "routes/**/": "KEBAB_CASE",
        "*/&&!src/components/**/": "KEBAB_CASE"
      }
    ],
    "arrow-body-style": ["off", "never"],
    // "comma-dangle": "off",
    "lines-between-class-members": "off",
    "no-shadow": "off", // replaced by ts-eslint rule below
    "no-use-before-define": "off",
    "@typescript-eslint/no-shadow": "error",
    "max-classes-per-file": "off",
    "no-void": "off"
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      },
      "typescript": "./tsconfig.json"
    },

    "react": {
      "version": "detect" // Tells eslint-plugin-react to automatically detect the version of React to use
    }
  },
  "overrides": [
    {
      "files": [
        "**/*/test/**/*",
        "**/?(*.)+(spec|test).[jt]s?(x)",
        "**/*/mocks/**/*",
        "**/*/test-utils/**/*"
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off"
      }
    }
  ],
  "ignorePatterns": ["**/*.js", "setUpTests.ts", "src/@domains/*-legacy/**/*"]
}
